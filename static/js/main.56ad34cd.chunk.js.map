{"version":3,"sources":["logo.svg","Slider.js","initCondTable.js","ratesTable.js","textArea.js","rk.js","general_model.js","models.js","graph.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","input","MySlider","withStyles","thumb","backgroundColor","border","active","Slider","roundToSignificantFigures","num","n","d","Math","ceil","log10","power","floor","magnitude","round","InputSlider","steps","min","max","color","log","type","index","value","sliderChangedCallback","sliderLogToggledCallback","disabled","classes","linStep","logStep","inputStep","exp","console","Grid","container","spacing","alignItems","item","xs","ToggleButton","selected","onChange","event","newValue","new_val","aria-labelledby","step","Input","margin","className","target","Number","inputProps","InitCondTable","data","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","entry","math","texName","errorColor","init","RatesTable","log_fr","min_fr","max_fr","fr","log_br","min_br","max_br","br","TextArea","schemeText","modelSubmitCallback","textChangedCallback","TextareaAutosize","placeholder","style","fontSize","fontFamily","Button","variant","onClick","_scalarMult","scalar","vector","res","Array","i","_vecAdd2Sec","a","b","UndependentVariableError","Error","rungeKutta4","ODE","initialCondition","range","t0","t1","stepSize","length","rk4Multi","rk4Single","f","h","j","t_start","t","x","y","k1","k2","k3","k4","xVals","yVals","m","yLast","result","k","prototype","equals","warn","array","this","l","Object","defineProperty","enumerable","GeneralModel","initial_conditions","elem_reactions","scheme","func","diffEquations","diffEquationsFRates","from_comp","to_comp","forward_rate","backward_rate","reaction","el","push","names","forEach","comp","includes","getCompartments","chars","split","name","numbers","addNumbers","isNaN","replaceAll","backwardRates","comps","fComps","getLatexFormattedCompartments","dict","rateNames","fFromComps","c","fToComps","occursFC","occurences","occursTC","key","fArrow","frNoColor","join","useZeroBR","values","forward_rates","backward_rates","solution","idx_from","idx_to","includeBackwardRates","getRateNames","compsF","comps_len","posTerms","negTerms","forward_prod","backward_prod","fList","bList","occursF","occursB","posOccurs","allOccurs","terms","sign","numStr","abs","inv_dict","r","_forward_rates","_backward_rates","i_from","i_to","_buildDiffEq","dc_dt","fill","subtractOccurences","_model","line","white_space_filter","match","processed_tokens","token","entries","exec","contains_number","number","parseInt","addElementaryReaction","kineticModels","class","description","nonZeroBackwardRates","initialConditions","A","logSlider","B","C","D","E","F","G","H","I","J","K","Rabbit","Wolf","DeadWolf","rates","forwardRate","backwardRate","forwardRateMin","forwardRateMax","backwardRateMin","backwardRateMax","forwardRateLogSlider","backwardRateLogSlider","Susceptible","Infected","Recovered","Dead","Exposed","S","ES","P","tPS","PS","T","tRB","RB","raRB","rkRB","PlotlyGraph","layout","config","frames","revision","useResizeHandler","height","App","state","initData","ratesData","figure","xaxis","title","showgrid","zeroline","linecolor","linewidth","mirror","yaxis","autosize","scrollZoom","responsive","texEquation","cbNonZero","model","modelSubmitted","bind","sliderValueChanged","cbNonZero_checkedChanged","modelChanged","simulateModel","diff","mode","pop","text","setState","selecteModel","lastInitData","lastRatesData","fromText","init_value","condition","fr_val","br_val","buildFunc","simulModel","alert","f_val","parseFloat","objectChosen","checked","direction","Autocomplete","options","sort","localeCompare","groupBy","option","getOptionLabel","renderInput","params","TextField","label","FormControlLabel","control","Checkbox","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56ad34cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\n// import VolumeUp from '@material-ui/icons/VolumeUp';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  input: {\r\n    width: 100,\r\n  },\r\n});\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//         color: '#ff0000',\r\n//   },\r\n//   thumb: {\r\n//        backgroundColor: '#fff',\r\n//        border: '3px solid currentColor',\r\n//      },\r\n\r\n// })\r\n\r\n\r\nconst MySlider = withStyles({\r\n  thumb: {\r\n    backgroundColor: '#ffffff',\r\n    border: '3px solid currentColor',\r\n  },\r\n  active: {},\r\n})(Slider);\r\n\r\nfunction round(value, digits) {\r\n  return Math.round((value + Number.EPSILON) * 10**digits) / 10**digits\r\n}\r\n\r\n// https://stackoverflow.com/questions/202302/rounding-to-an-arbitrary-number-of-significant-digits\r\nfunction roundToSignificantFigures(num, n) {\r\n  if(num == 0) {\r\n      return 0;\r\n  }\r\n\r\n  let d = Math.ceil(Math.log10(num < 0 ? -num: num));\r\n  let power = n - Math.floor(d);\r\n\r\n  let magnitude = 10 ** power;\r\n  let shifted = Math.round(num * magnitude);\r\n  return shifted / magnitude;\r\n}\r\n\r\n\r\n// const RedSlider = withStyles({\r\n//   root: {\r\n//     color: '#ff0000',\r\n//     // height: 8,\r\n//   },\r\n//   thumb: {\r\n//     // height: 24,\r\n//     // width: 24,\r\n//     backgroundColor: '#fff',\r\n//     border: '3px solid currentColor',\r\n//     // marginTop: -8,\r\n//     // marginLeft: -12,\r\n//     // '&:focus, &:hover, &$active': {\r\n//     //   boxShadow: 'inherit',\r\n//     // },\r\n//   },\r\n//   active: {},\r\n//   // valueLabel: {\r\n//   //   left: 'calc(-50% + 4px)',\r\n//   // },\r\n//   // track: {\r\n//   //   height: 8,\r\n//   //   borderRadius: 4,\r\n//   // },\r\n//   // rail: {\r\n//   //   height: 8,\r\n//   //   borderRadius: 4,\r\n//   // },\r\n// })(Slider);\r\n\r\nexport default function InputSlider({ steps, min, max, color, log, type, index, value, \r\n  sliderChangedCallback, sliderLogToggledCallback, disabled }) {\r\n  const classes = useStyles();\r\n  // const [value, setValue] = React.useState(typeof defaultValue === 'undefined' ? 0 : defaultValue);\r\n\r\n  // const [toggled, setToggled] = React.useState(false);\r\n\r\n  const sigDigits = 3;\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    if (value !== newValue) {\r\n      // setValue(newValue);\r\n      let new_val = (log === true) ? Math.exp(newValue) : newValue;\r\n      sliderChangedCallback(type, index, roundToSignificantFigures(new_val, sigDigits));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    let newValue = event.target.value === '' ? 0 : Number(event.target.value);\r\n\r\n    if (value !== newValue) {\r\n      sliderChangedCallback(type, index, roundToSignificantFigures(newValue, sigDigits));\r\n      // setValue(newValue);\r\n    }\r\n  };\r\n\r\n\r\n  // const handleBlur = () => {\r\n  //   if (value < 0) {\r\n  //     setValue(0);\r\n  //   } else if (value > 100) {\r\n  //     setValue(100);\r\n  //   }\r\n  // };\r\n\r\n  value = typeof value === 'number' ? value : 0;\r\n  if (log)\r\n    min = (min < 1e-4) ? 1e-4 : min;\r\n\r\n  // let step = log ? (Math.log(max) - Math.log(min)) / steps : (max - min) / steps;\r\n  let linStep = (max - min) / steps;\r\n  let logStep = (Math.log(max) - Math.log(min)) / steps;\r\n\r\n  // calculates the linear step for input field\r\n  let inputStep = log ? Math.exp(Math.log(value) + logStep) - value : linStep;\r\n  inputStep = roundToSignificantFigures(inputStep, 3)\r\n  console.log(inputStep);\r\n\r\n  //   function valueLabelFormat(value) {\r\n  //     const [coefficient, exponent] = value\r\n  //       .toExponential()\r\n  //       .split('e')\r\n  //       .map((item) => Number(item));\r\n  //     return `${Math.round(coefficient)}e^${exponent}`;\r\n  //   }\r\n\r\n  return (\r\n    <div >\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs>\r\n          <ToggleButton\r\n            // value='check'\r\n            selected={log}\r\n            disabled={disabled}\r\n            onChange={() => sliderLogToggledCallback(type, index)}\r\n          >Log</ToggleButton>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <MySlider\r\n            value={log ? Math.log(value) : value}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n            min={log ? Math.log(min) : min}\r\n            max={log ? Math.log(max) : max}\r\n            step={log ? logStep : linStep}\r\n            //className={classes.root}\r\n            color={color}\r\n            disabled={disabled}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            value={value}\r\n            margin=\"dense\"\r\n            className={classes.input}\r\n            // multiline={true}\r\n            onChange={handleInputChange}\r\n            // onBlur={handleBlur}\r\n            inputProps={{\r\n                min:  min,\r\n                max:  max,\r\n                step: inputStep,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n            disabled={disabled}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n\r\n  // return (\r\n  //   <div >\r\n  //     <Grid container spacing={2} alignItems=\"center\">\r\n  //       <Grid item xs>\r\n  //         {forwardRateSlider ? (\r\n  //         <BlueSlider\r\n  //           value={typeof value === 'number' ? value : 0}\r\n  //           onChange={handleSliderChange}\r\n  //           aria-labelledby=\"input-slider\"\r\n  //           min={typeof min === 'undefined' ? 0 : min}\r\n  //           max={typeof max === 'undefined' ? 100 : max}\r\n  //           step={typeof step === 'undefined' ? 1 : step}\r\n  //         />)\r\n  //         : (\r\n  //           <RedSlider\r\n  //           value={typeof value === 'number' ? value : 0}\r\n  //           onChange={handleSliderChange}\r\n  //           aria-labelledby=\"input-slider\"\r\n  //           min={typeof min === 'undefined' ? 0 : min}\r\n  //           max={typeof max === 'undefined' ? 100 : max}\r\n  //           step={typeof step === 'undefined' ? 1 : step}\r\n  //           disabled={disabled}\r\n  //         />\r\n  //         )}\r\n  //       </Grid>\r\n  //       <Grid item>\r\n  //         <Input\r\n  //           value={value}\r\n  //           margin=\"dense\"\r\n  //           // multiline={true}\r\n  //           onChange={handleInputChange}\r\n  //           onBlur={handleBlur}\r\n  //           inputProps={{\r\n  //               min: typeof min === 'undefined' ? 0 : min,\r\n  //               max: typeof max === 'undefined' ? 100 : max,\r\n  //               step: typeof step === 'undefined' ? 1 : step,\r\n  //             type: 'number',\r\n  //             'aria-labelledby': 'input-slider',\r\n  //           }}\r\n  //           disabled={disabled}\r\n  //         />\r\n  //       </Grid>\r\n  //     </Grid>\r\n  //   </div>\r\n  // );\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputSlider from './Slider.js'\r\nimport './App.css';\r\n\r\nimport { InlineMath } from 'react-katex';\r\nimport 'katex/dist/katex.min.css';\r\n\r\n// const useStyles = makeStyles({\r\n//   table: {\r\n//     minWidth: 650,\r\n//   },\r\n// });\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\nexport default function InitCondTable( {data, sliderChangedCallback, sliderLogToggledCallback} ) {\r\n//   const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table size=\"small\" aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Compartment</TableCell>\r\n            <TableCell align=\"center\">Initial conditions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((entry, index) => (\r\n            <TableRow>\r\n              <TableCell align=\"center\"><InlineMath math={entry.texName} errorColor={'#cc0000'}/></TableCell>\r\n              <TableCell align=\"center\">\r\n                <InputSlider \r\n                  log={entry.log}\r\n                  steps={100} \r\n                  min={entry.min}\r\n                  max={entry.max} \r\n                  value={entry.init}\r\n                  type='init'\r\n                  index={index}\r\n                  color='primary'\r\n                  sliderChangedCallback={sliderChangedCallback}\r\n                  sliderLogToggledCallback={sliderLogToggledCallback}>\r\n                </InputSlider>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputSlider from './Slider.js'\r\n\r\nimport { InlineMath } from 'react-katex';\r\nimport 'katex/dist/katex.min.css';\r\n\r\n\r\nexport default function RatesTable({data, disabled, sliderChangedCallback, sliderLogToggledCallback}) {\r\n    //   const classes = useStyles();\r\n  \r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\" aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">Rate constant</TableCell>\r\n              <TableCell align=\"center\">Forward rates</TableCell>\r\n              <TableCell align=\"center\">Backward rates</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n              {data.map((entry, index) => (\r\n                  <TableRow>\r\n                    <TableCell align=\"center\">\r\n                      <InlineMath math={entry.texName} errorColor={'#cc0000'}/>\r\n                    </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <InputSlider log={entry.log_fr} \r\n                          steps={100} \r\n                          min={entry.min_fr}\r\n                          max={entry.max_fr} \r\n                          value={entry.fr}\r\n                          type=\"fr\"\r\n                          index={index} \r\n                          sliderChangedCallback={sliderChangedCallback}\r\n                          sliderLogToggledCallback={sliderLogToggledCallback}\r\n                          color=\"primary\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <InputSlider log={entry.log_br} \r\n                          steps={100} \r\n                          min={entry.min_br} \r\n                          max={entry.max_br} \r\n                          value={entry.br} \r\n                          type=\"br\"\r\n                          index={index} \r\n                          sliderChangedCallback={sliderChangedCallback}\r\n                          sliderLogToggledCallback={sliderLogToggledCallback}\r\n                          disabled={disabled}\r\n                          color=\"secondary\"\r\n                        />\r\n                      </TableCell>\r\n                  </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n}","import React from 'react';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n// export default class TextArea extends React.Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             text: typeof props.text === 'undefined' ? \"\" : props.text\r\n//         }\r\n//         // this.callBack = props.modelSubmitCallback;\r\n//         this.handleChange = this.handleChange.bind(this);\r\n//     }\r\n\r\n//     handleChange (event) {\r\n//         this.setState(state => ({text: event.target.value}));\r\n//     };\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <TextareaAutosize onChange={this.handleChange} aria-label=\"empty textarea\" placeholder=\"Model...\" value={this.state.text}></TextareaAutosize>\r\n//                 <br/>\r\n//                 <Button variant=\"contained\" \r\n//                     onClick={() => this.props.modelSubmitCallback(this.state.text)} \r\n//                     color=\"primary\">Submit</Button>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\nexport default function TextArea({schemeText, modelSubmitCallback, textChangedCallback}) {\r\n    // const [text, setValue] = React.useState(typeof props.schemeText === 'undefined' ? \"\" : props.schemeText);\r\n  \r\n    return (\r\n        <div>\r\n          <div className=\"text-area\">\r\n            <TextareaAutosize \r\n              onChange={event => textChangedCallback(event.target.value)} \r\n              aria-label=\"empty textarea\" \r\n              placeholder=\">> Place kinetic model here <<\"\r\n              style={{fontSize: 18, fontFamily: 'Palatino'}}\r\n              value={schemeText}>\r\n            </TextareaAutosize>\r\n            </div>\r\n            <Button variant=\"contained\" \r\n                onClick={() => modelSubmitCallback()} \r\n                color=\"primary\">Submit</Button>\r\n        </div>\r\n    );\r\n  }\r\n","// from https://github.com/giannotr/runge-kutta-js, modified\r\n\r\n// \"use strict\";\r\n// var __assign = (this && this.__assign) || function () {\r\n//     __assign = Object.assign || function(t) {\r\n//         for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n//             s = arguments[i];\r\n//             for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n//                 t[p] = s[p];\r\n//         }\r\n//         return t;\r\n//     };\r\n//     return __assign.apply(this, arguments);\r\n// };\r\n\r\n// var __spreadArrays = (this && this.__spreadArrays) || function () {\r\n//     for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n//     for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n//         for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n//             r[k] = a[j];\r\n//     return r;\r\n// };\r\n\r\n// Object.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction _scalarMult (scalar, vector, n) {\r\n    /*\r\n    * Creates a new array.\r\n    */\r\n    var res = new Array(n);\r\n    for (let i = 0; i < n; i++){\r\n        res[i] = vector[i] * scalar;\r\n    }\r\n    return res; \r\n}\r\n\r\nfunction _vecAdd2Sec (a, b, n) { \r\n    /*\r\n    * Adds a to second array (b) and returns it !!!!! \r\n    */\r\n    for (let i = 0; i < n; i++){\r\n        b[i] += a[i];\r\n    }\r\n    return b; \r\n}\r\n\r\n\r\nlet UndependentVariableError = new Error('The destination of the undependent variable has to be greater than its start');\r\n// let StepSizeDivisibilityError = new Error('The range has to be an divisible by the step size');\r\n\r\nexport function rungeKutta4(ODE, initialCondition, range=[0, 1], steps=500) {\r\n    var t0 = range[0], t1 = range[1];\r\n\r\n    if (t1 <= t0)\r\n        throw UndependentVariableError;\r\n\r\n    var stepSize = (t1 - t0) / steps;\r\n\r\n    return initialCondition.length > 1 ? \r\n        rk4Multi(ODE, steps, stepSize, initialCondition, t0) : \r\n        rk4Single(ODE, steps, stepSize, initialCondition, t0);\r\n\r\n    // if (stepSize === void 0) { stepSize = 1; }\r\n    // var _return;\r\n    //     var steps = Math.round((t1 - t0) / stepSize);\r\n    //     // var args = {\r\n    //     //     equation: ODE,\r\n    //     //     start: t0,\r\n    //     //     stepSize: stepSize,\r\n    //     //     steps: steps,\r\n    //     // };\r\n    //     // if (Number.isInteger(steps)) {\r\n    //     if (typeof initialCondition === 'object' && initialCondition.length > 1) {\r\n    //         // _return = rk4Multi(__assign(__assign({}, args), { initialCondition: initialCondition }));\r\n    //         _return = rk4Multi(ODE, steps, stepSize, initialCondition, t0);\r\n\r\n    //     }\r\n    //     else {\r\n    //         var _initialCondition = void 0;\r\n    //         if (typeof initialCondition === 'object') {\r\n    //             _initialCondition = initialCondition[0];\r\n    //         }\r\n    //         else {\r\n    //             _initialCondition = initialCondition;\r\n    //         }\r\n    //         _return = rk4Single(__assign(__assign({}, args), { initialCondition: _initialCondition }));\r\n    //     }\r\n    //     return _return;\r\n    //     // }\r\n    //     // throw StepSizeDivisibilityError;\r\n    // }\r\n    // throw UndependentVariableError;\r\n}\r\n\r\nfunction rk4Single (f, n, h, j, t_start) {\r\n    /*\r\n    * f - function to call\r\n    * n - number of steps\r\n    * h - step size\r\n    * j - initial condition - must be number\r\n    * t_start = time at initial conditions\r\n     */\r\n    var t = t_start;\r\n    var x = new Array(n+1);  // x values\r\n    var y = new Array(n+1)   // y values\r\n    x[0] = t; // t start\r\n    y[0] = j;\r\n    var i = 0;\r\n    var k1, k2, k3, k4;\r\n    while (i < n) {\r\n        k1 = f(t, y[i]);\r\n        k2 = f(t + (.5 * h), y[i] + (.5 * h * k1));\r\n        k3 = f(t + (.5 * h), y[i] + (.5 * h * k2));\r\n        k4 = f(t + h, y[i] + (h * k3));\r\n        y[i + 1] = y[i] + (h * (k1 + (2 * k2) + (2 * k3) + k4) / 6);\r\n        t += h;\r\n        i++;\r\n        x[i] = t;\r\n    }\r\n    return {xVals: x, yVals: y};\r\n}\r\n\r\n\r\nfunction rk4Multi(f, n, h, j, t_start) {\r\n    /*\r\n    * f - function to call\r\n    * n - number of steps\r\n    * h - step size\r\n    * j - initial condition vector\r\n    * t_start = time at initial conditions\r\n    */\r\n    var m = j.length;\r\n    var t = t_start;\r\n    var k1, k2, k3, k4;\r\n    var yLast = j;\r\n\r\n    var x = new Array(n+1);  // x values\r\n    x[0] = t; // t start\r\n\r\n    var result = new Array(m);\r\n    for (let k = 0; k < m; k++) {\r\n        result[k] = new Array(n+1); // n + 1 points\r\n        result[k][0] = yLast[k];\r\n    }\r\n    for (let i = 1; i <= n; i++) {\r\n        k1 = f(t, yLast);\r\n        k2 = f(t + (.5 * h), _vecAdd2Sec(yLast, _scalarMult(.5 * h, k1, m), m));\r\n        k3 = f(t + (.5 * h), _vecAdd2Sec(yLast, _scalarMult(.5 * h, k2, m), m));\r\n        k4 = f(t + h, _vecAdd2Sec(yLast, _scalarMult(h, k3, m), m));\r\n        for (let k = 0; k < m; k++) {\r\n            yLast[k] += h * (k1[k] + (2 * k2[k]) + (2 * k3[k]) + k4[k]) / 6;\r\n            result[k][i] = yLast[k];\r\n        }\r\n        t += h;\r\n        x[i] = t;\r\n    }\r\n\r\n    return {xVals: x, yVals: result};\r\n}","\r\nimport { rungeKutta4 } from './rk.js';\r\n\r\n// Warn if overriding existing method\r\nif(Array.prototype.equals)\r\n    console.warn(\"Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\r\n\r\n// attach the .equals method to Array's prototype to call it on any array\r\nArray.prototype.equals = function (array) {\r\n    // if the other array is a falsy value, return\r\n    if (!array)\r\n        return false;\r\n\r\n    // compare lengths - can save a lot of time \r\n    if (this.length !== array.length)\r\n        return false;\r\n\r\n    for (var i = 0, l=this.length; i < l; i++) {\r\n        // Check if we have nested arrays\r\n        if (this[i] instanceof Array && array[i] instanceof Array) {\r\n            // recurse into the nested arrays\r\n            if (!this[i].equals(array[i]))\r\n                return false;       \r\n        }           \r\n        else if (this[i] !== array[i]) { \r\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n            return false;   \r\n        }           \r\n    }       \r\n    return true;\r\n}\r\n// Hide method from for-in loops\r\nObject.defineProperty(Array.prototype, \"equals\", {enumerable: false});\r\n\r\nexport class GeneralModel {\r\n\r\n    constructor () {\r\n        this.initial_conditions = {};\r\n        this.elem_reactions = [];  // list of dictionaries of elementary reactions\r\n        this.scheme = \"\";\r\n        this.func = null;  // function that returns dc_dt for current c and t for built model\r\n        this.diffEquations = '';  //variable that stores diff. equation text to be displayed\r\n        this.diffEquationsFRates = '';  //only forward rates diff eqs.\r\n    }\r\n\r\n    addElementaryReaction(from_comp=['A', 'A'], to_comp=['B', 'C'], forward_rate=1, backward_rate=0) {\r\n        let reaction = {\r\n            from_comp: from_comp,\r\n            to_comp: to_comp,\r\n            forward_rate: forward_rate,\r\n            backward_rate: backward_rate\r\n        };\r\n\r\n        for (let i = 0; i < this.elem_reactions.length; i++) {\r\n            let el = this.elem_reactions[i];\r\n            if (el.from_comp.equals(reaction.from_comp) && el.to_comp.equals(reaction.to_comp)) {\r\n                el.forward_rate = reaction.forward_rate;\r\n                el.backward_rate = reaction.backward_rate;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.elem_reactions.push(reaction);\r\n    }\r\n\r\n    getCompartments() {\r\n        let names = [];\r\n\r\n        this.elem_reactions.forEach(el => {\r\n            el.from_comp.forEach(comp => {\r\n                if (!(names.includes(comp))) names.push(comp);\r\n            });\r\n            el.to_comp.forEach(comp => {\r\n                if (!(names.includes(comp))) names.push(comp);\r\n            });\r\n        });\r\n\r\n        return names;\r\n    }\r\n\r\n    getLatexFormattedCompartments() {\r\n        let result = [];\r\n\r\n        for (let c of this.getCompartments()) {\r\n            // following code makes numbers subscript and text keeps normal, all text is then \r\n            // enclosed in \\\\mathrm{}, also dots . are replaced by \\\\cdot\r\n\r\n            let chars = c.split('');\r\n            let name = '';\r\n            let numbers = null;\r\n\r\n            let addNumbers = function () {\r\n                if (numbers == null) return;\r\n\r\n                name += `_{${numbers}}`;\r\n                numbers = null;\r\n            }\r\n\r\n            for (let i = 0; i < chars.length; i++) {\r\n                if (isNaN(chars[i])) {\r\n                    addNumbers();\r\n                    name += chars[i];\r\n                }\r\n                else {\r\n                    numbers = numbers == null ? '' : numbers;\r\n                    numbers += chars[i];\r\n                    if (i === chars.length - 1)\r\n                        addNumbers();\r\n                }\r\n            }\r\n\r\n            name = `\\\\mathrm{${name.replaceAll('.', '\\\\cdot ')}}`;\r\n            \r\n            result.push(name);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getRateNames(backwardRates=false) {\r\n\r\n        let comps = this.getCompartments();\r\n        let fComps = this.getLatexFormattedCompartments();\r\n        let dict = {};\r\n\r\n        for (let i = 0; i < comps.length + 1; i++) \r\n            dict[comps[i]] = fComps[i];\r\n\r\n        let rateNames = [];\r\n        for (let el of this.elem_reactions) {\r\n            let fFromComps = el.from_comp.map(c => dict[c]);\r\n            let fToComps = el.to_comp.map(c => dict[c]);\r\n\r\n            let occursFC = GeneralModel.occurences(fFromComps);\r\n            let occursTC = GeneralModel.occurences(fToComps);\r\n\r\n            fFromComps = [];\r\n            fToComps = [];\r\n\r\n            // if there is multiple compartments, find occurences and multiply them\r\n            for (let key in occursFC) {\r\n                let num = occursFC[key];\r\n                fFromComps.push(num === 1 ? key : `${num}${key}`);\r\n            }\r\n\r\n            for (let key in occursTC) {\r\n                let num = occursTC[key];\r\n                fToComps.push(num === 1 ? key : `${num}${key}`);\r\n            }\r\n\r\n            let fArrow = backwardRates ? '\\\\rightarrow' : '\\\\rightleftharpoons';\r\n            let frNoColor = `k_{${fFromComps.join('+')} ${fArrow} ${fToComps.join('+')}}`;\r\n\r\n            let fr = `{\\\\color{blue}${frNoColor}}`;\r\n            let br = `{\\\\color{red}k_{${fFromComps.join('+')} \\\\leftarrow ${fToComps.join('+')}}}`;\r\n\r\n            rateNames.push(backwardRates ? [fr, br] : frNoColor);\r\n        }\r\n\r\n        return rateNames;\r\n    }\r\n\r\n    printModel() {\r\n        console.log(`Scheme: ${this.scheme}`);\r\n        console.log(\"Initial conditions:\", this.initial_conditions);\r\n\r\n        this.elem_reactions.forEach(el => {\r\n            console.log(`Elementary reaction: ${el.from_comp.join(' + ')} -> ${el.to_comp.join(' + ')}, forward_rate=${el.forward_rate}, backward_rate=${el.backward_rate}`);\r\n        });\r\n    }\r\n\r\n    simulateModel(steps=500, range=[0, 100], useZeroBR=false) {\r\n        let j = Object.values(this.initial_conditions);   \r\n\r\n        let forward_rates = new Array(this.elem_reactions.length);\r\n        let backward_rates = new Array(this.elem_reactions.length);\r\n\r\n        for (let i = 0; i < this.elem_reactions.length; i++) {\r\n            forward_rates[i] = this.elem_reactions[i].forward_rate;\r\n            backward_rates[i] = useZeroBR ? 0 : this.elem_reactions[i].backward_rate;\r\n        }\r\n\r\n        let solution = rungeKutta4((t, c) => this.func(t, c, forward_rates, backward_rates), j, range, steps);\r\n\r\n        return solution;\r\n    }\r\n\r\n    static occurences(array, dict=null, subtractOccurences=false) {\r\n        /*\r\n        * Makes a dictionary of unique values in array and ascribes them a number of times they occured.\r\n        * If dict is not null, it uses this dictionary as a starting point.\r\n        * If subtractOccurences=true, if value exists already in dict, it will decresed by one. If not, \r\n        * it starts at -1.\r\n        */\r\n        dict = dict === null ? {} : dict;\r\n\r\n        let num = subtractOccurences ? -1 : 1;\r\n\r\n        for (var i = 0; i < array.length; i++) {\r\n            var value = array[i];\r\n            dict[value] = dict[value] ? dict[value] + num : num;\r\n        }\r\n        return dict;\r\n    }\r\n\r\n    _buildDiffEq(idx_from, idx_to, includeBackwardRates=true){\r\n        // builds latex type diff. equation for printing\r\n\r\n        let rateNames = this.getRateNames(true);\r\n        let compsF = this.getLatexFormattedCompartments();\r\n        let comps_len = compsF.length;\r\n\r\n        let posTerms = new Array(comps_len);\r\n        let negTerms = new Array(comps_len);\r\n        for (let i = 0; i < comps_len; i++) {\r\n            posTerms[i] = [];\r\n            negTerms[i] = [];\r\n        }\r\n\r\n        // build latex diff. equations\r\n        for (let i = 0; i < this.elem_reactions.length; i++) {\r\n            \r\n            let forward_prod = rateNames[i][0];\r\n            let backward_prod = rateNames[i][1];\r\n\r\n            let fList = idx_from[i].map(k => `[${compsF[k]}]`);\r\n            let bList = idx_to[i].map(k => `[${compsF[k]}]`);\r\n\r\n            let occursF = GeneralModel.occurences(fList);\r\n            let occursB = GeneralModel.occurences(bList);\r\n\r\n            for (let key in occursF) {\r\n                let num = occursF[key];\r\n                forward_prod += num === 1 ? key : `${key}^{${num}}`;\r\n            }\r\n\r\n            for (let key in occursB) {\r\n                let num = occursB[key];\r\n                backward_prod += num === 1 ? key : `${key}^{${num}}`;\r\n            }\r\n\r\n            idx_from[i].forEach(k => {\r\n                if (includeBackwardRates)\r\n                    posTerms[k].push(backward_prod);\r\n\r\n                negTerms[k].push(forward_prod);\r\n            });\r\n\r\n            idx_to[i].forEach(k => {\r\n                posTerms[k].push(forward_prod);\r\n\r\n                if (includeBackwardRates)\r\n                    negTerms[k].push(backward_prod);\r\n            });\r\n        }\r\n\r\n        // finish latex diff. equations\r\n\r\n        var result = '';\r\n\r\n        for (let i = 0; i < comps_len; i++) {\r\n            let posOccurs = GeneralModel.occurences(posTerms[i]);\r\n            let allOccurs = GeneralModel.occurences(negTerms[i], posOccurs, true); // subtract same occurences\r\n\r\n            let terms = [];\r\n            for (let key in allOccurs) {\r\n                let num = allOccurs[key];\r\n                if (num === 0)\r\n                    continue;\r\n\r\n                let sign = num > 0 ? '+' : '-';\r\n                let numStr = Math.abs(num) === 1 ? '' : Math.abs(num);\r\n                terms.push(`${sign}${numStr}${key}`);\r\n            }\r\n\r\n            result += `\\\\frac{\\\\mathrm d[${compsF[i]}]}{\\\\mathrm dt}&=${terms.join('')}\\\\\\\\`\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    buildFunc() {\r\n        let comps = this.getCompartments();\r\n        var comps_len = comps.length;\r\n\r\n        let inv_dict = {};\r\n        for (let i = 0; i < comps_len; i++)\r\n            inv_dict[comps[i]] = i;\r\n            \r\n        var r = this.elem_reactions.length;\r\n        var idx_from = [];  // arrays of arrays of indexes for each elementary reaction\r\n        var idx_to = [];  // arrays of arrays of indexes for each elementary reaction\r\n        var _forward_rates = [];\r\n        var _backward_rates = [];\r\n\r\n        for (let i = 0; i < r; i++) {\r\n            let el = this.elem_reactions[i];\r\n            \r\n            let i_from = el.from_comp.map(comp => inv_dict[comp]); // list of indexes of starting materials\r\n            let i_to = el.to_comp.map(comp => inv_dict[comp]);  // list of indexes of reaction products\r\n\r\n            idx_from.push(i_from);\r\n            idx_to.push(i_to);\r\n\r\n            _forward_rates[i] = el.forward_rate;\r\n            _backward_rates[i] = el.backward_rate;\r\n        }\r\n\r\n        this.diffEquations = this._buildDiffEq(idx_from, idx_to, true);\r\n        this.diffEquationsFRates = this._buildDiffEq(idx_from, idx_to, false);\r\n\r\n        this.func = (t, c, forward_rates=null, backward_rates=null) => {\r\n            if (forward_rates == null)\r\n                forward_rates = _forward_rates;\r\n            if (backward_rates == null)\r\n                backward_rates = _backward_rates;\r\n\r\n            let dc_dt = new Array(comps_len).fill(0);\r\n\r\n            for (let i = 0; i < r; i++) {\r\n\r\n                let forward_prod = forward_rates[i];\r\n                let backward_prod = backward_rates[i];\r\n                \r\n                for (let k = 0; k < idx_from[i].length; k++) {\r\n                    forward_prod *= c[idx_from[i][k]];\r\n                }\r\n\r\n                for (let k = 0; k < idx_to[i].length; k++) {\r\n                    backward_prod *= c[idx_to[i][k]];\r\n                }\r\n\r\n                for (let k = 0; k < idx_from[i].length; k++) {\r\n                    dc_dt[idx_from[i][k]] += backward_prod - forward_prod; // reactants\r\n                }\r\n\r\n                for (let k = 0; k < idx_to[i].length; k++) {\r\n                    dc_dt[idx_to[i][k]] += forward_prod - backward_prod; // products\r\n                }\r\n            }\r\n            return dc_dt;\r\n        };\r\n    }\r\n\r\n    static fromText(scheme) {\r\n        var _model = new GeneralModel();\r\n        _model.scheme = scheme;\r\n\r\n        let lines = scheme.split('\\n');\r\n\r\n        lines.forEach(line => {\r\n            line = line.split('#')[0]  // remove comments\r\n            let white_space_filter = line.match(/[^\\s]+/g);\r\n            if (line === \"\" || white_space_filter === null)\r\n                return;\r\n\r\n            line = white_space_filter.join('')  // remove white space characters\r\n            let processed_tokens = [];\r\n\r\n            line.split('=').forEach(token => {\r\n                let entries = [];\r\n\r\n                token.split('+').forEach(entry => {\r\n\r\n                    let regExp = /(\\d)([\\w\\d\\.]+)|([\\w\\d\\.]+)/g;\r\n                    let match = regExp.exec(entry);  // get groups\r\n\r\n                    let contains_number = typeof match[3] == 'undefined';\r\n\r\n                    let number = contains_number ? parseInt(match[1]) : 1;\r\n                    let name = contains_number ? match[2] : match[3];\r\n\r\n                    if (number < 1) number = 1;\r\n                    \r\n                    for (let i = 0; i < number; i++) entries.push(name);\r\n                });\r\n                processed_tokens.push(entries);\r\n            });\r\n\r\n            for (let i = 0; i < processed_tokens.length - 1; i++) {\r\n                _model.addElementaryReaction(processed_tokens[i], processed_tokens[i+1]);\r\n            }\r\n\r\n        });\r\n\r\n        let comps = _model.getCompartments();\r\n        for (let i = 0; i < comps.length; i++)\r\n            _model.initial_conditions[comps[i]] = i === 0 ? 1 : 0;\r\n\r\n        return _model;\r\n    }\r\n}\r\n","\r\n\r\n\r\n\r\n\r\nexport const kineticModels = [\r\n    {\r\n        class: \"Funny models\",\r\n        name: \"Cyclic model\",\r\n        description: \"\",\r\n        scheme: \"A = B = C = D = E = F = G = H = I = J = K = A\",\r\n        nonZeroBackwardRates: false,\r\n        initialConditions: {\r\n            A: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 1\r\n            },\r\n            B: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            C: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            D: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            E: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            F: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            G: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            H: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            I: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            J: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            K: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n        },\r\n    },\r\n    {\r\n        class: \"Funny models\",\r\n        name: \"Lotka-Volterra\",\r\n        description: \"\",\r\n        scheme: \"Rabbit = 2Rabbit\\nWolf = DeadWolf\\nWolf + Rabbit = 2Wolf\",\r\n        nonZeroBackwardRates: false,\r\n        initialConditions: {\r\n            Rabbit: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 1\r\n            },\r\n            Wolf: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 1\r\n            },\r\n            DeadWolf: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            }\r\n        },\r\n        rates: [\r\n            {\r\n                forwardRate: 4.4,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 1.9,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 1.3,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        class: \"Epidemic\",\r\n        name: \"SIR Model\",\r\n        description: \"TODO\",\r\n        scheme: \"Susceptible + Infected = 2Infected\\nInfected = Recovered\\nInfected = Dead\",\r\n        nonZeroBackwardRates: false,\r\n        initialConditions: {\r\n            Susceptible: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 100,\r\n                value: 10\r\n            },\r\n            Infected: {\r\n                logSlider: true,\r\n                min: 1e-5,\r\n                max: 10,\r\n                value: 1e-3\r\n            },\r\n            Recovered: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 10,\r\n                value: 0\r\n            },\r\n            Dead: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 10,\r\n                value: 0\r\n            }\r\n        },\r\n        rates: [\r\n            {\r\n                forwardRate: 0.6,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 1.5,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 0.1,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        class: \"Epidemic\",\r\n        name: \"SEIRS Model\",\r\n        description: \"TODO\",\r\n        scheme: \"Susceptible + Infected = Exposed + Infected\\nExposed = Infected = Recovered = Susceptible\\nInfected = Dead\",\r\n        nonZeroBackwardRates: false,\r\n        initialConditions: {\r\n            Susceptible: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 100,\r\n                value: 10\r\n            },\r\n            Exposed: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 100,\r\n                value: 0\r\n            },\r\n            Infected: {\r\n                logSlider: true,\r\n                min: 1e-5,\r\n                max: 10,\r\n                value: 1e-4\r\n            },\r\n            Recovered: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 10,\r\n                value: 0\r\n            },\r\n            Dead: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 10,\r\n                value: 0\r\n            }\r\n        },\r\n        rates: [\r\n            {\r\n                forwardRate: 4,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 0.8,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 2.4,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 0.3,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 0.1,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        class: \"Chemical kinetics\",\r\n        name: \"Michaelis-Menten\",\r\n        description: \"TODO\",\r\n        scheme: \"E + S = ES = E + P\",\r\n        nonZeroBackwardRates: true,\r\n        initialConditions: {\r\n            E: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 3.5\r\n            },\r\n            S: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 10\r\n            },\r\n            ES: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            P: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            }\r\n        },\r\n        rates: [\r\n            {\r\n                forwardRate: 0.4,\r\n                backwardRate: 1.4,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 1.9,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        class: \"Chemical kinetics\",\r\n        name: \"H2 + Br2\",\r\n        description: \"TODO\",\r\n        scheme: \"Br2 = 2Br.\\nBr. + H2 = HBr + H.\\nH. + Br2 = HBr + Br.\",\r\n        nonZeroBackwardRates: true,\r\n        initialConditions: {\r\n            'Br2': {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 1\r\n            },\r\n            'Br.': {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            'H2': {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 1\r\n            },\r\n            'HBr': {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            'H.': {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            }\r\n        },\r\n        rates: [\r\n            {\r\n                forwardRate: 0.4,\r\n                backwardRate: 0.9,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 2.9,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 1.2,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        class: \"Photochemistry\",\r\n        name: \"Photosensitization\",\r\n        description: \"TODO\",\r\n        scheme: \"tPS = PS\\n2tPS = tPS + PS\\ntPS + S = T + PS\\nT = S\",\r\n        nonZeroBackwardRates: false,\r\n        initialConditions: {\r\n            tPS: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 1\r\n            },\r\n            PS: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            S: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 2\r\n            },\r\n            T: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            }\r\n        },\r\n        rates: [\r\n            {\r\n                forwardRate: 0.5,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 0.3,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 1,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 0.5,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        class: \"Photochemistry\",\r\n        name: \"Rose bengal kinetics\",\r\n        description: \"TODO\",\r\n        scheme: \"tRB = RB\\ntRB + RB = 2RB\\n2tRB = tRB + RB\\ntRB + RB = raRB + rkRB\\n2tRB = raRB + rkRB\\nraRB + rkRB = 2RB\",\r\n        nonZeroBackwardRates: false,\r\n        initialConditions: {\r\n            tRB: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 1\r\n            },\r\n            RB: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            raRB: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            },\r\n            rkRB: {\r\n                logSlider: false,\r\n                min: 0,\r\n                max: 50,\r\n                value: 0\r\n            }\r\n        },\r\n        rates: [\r\n            {\r\n                forwardRate: 1.01,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 0.6,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 1.2,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 0.2,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 2.4,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n            {\r\n                forwardRate: 4.5,\r\n                backwardRate: 0,\r\n                forwardRateMin: 0,\r\n                forwardRateMax: 10,\r\n                backwardRateMin: 0,\r\n                backwardRateMax: 10,\r\n                forwardRateLogSlider: false,\r\n                backwardRateLogSlider: false\r\n            },\r\n        ],\r\n    },\r\n]\r\n\r\n\r\n\r\n\r\n\r\n// options = top100Films.map((option) => {\r\n//     const firstLetter = option.title[0].toUpperCase();\r\n//     return {\r\n//       firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\r\n//       ...option,\r\n//     };\r\n//   });\r\n\r\n","import { useState, React } from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\n\r\n// var layout = {\r\n//     title: 'Title of the graph',\r\n//     xaxis: {\r\n//         title: 'Time',\r\n//         showgrid: true,\r\n//         zeroline: false,\r\n//         linecolor: 'black',\r\n//         linewidth: 1,\r\n//         mirror: true\r\n//     },\r\n//     yaxis: {\r\n//         title: 'Concentration',\r\n//         showgrid: true,\r\n//         zeroline: false,\r\n//         type: 'log',\r\n//         linecolor: 'red',\r\n//         linewidth: 1,\r\n//         mirror: true\r\n//     }\r\n// };\r\n\r\nexport default function PlotlyGraph( {data, layout, config, frames, revision }) {\r\n    return (\r\n      <Plot\r\n        data={data}\r\n        layout={ layout }\r\n        config={config}\r\n        frames={frames}\r\n        // onUpdate={figure => console.log('on update')}\r\n        revision={revision}\r\n        useResizeHandler={true}\r\n        style={{\r\n          width: '100%',\r\n          height: '100%'\r\n        }}\r\n      />\r\n    );\r\n}\r\n\r\n/*export default function PlotlyGraph(props) {\r\n\r\n  // const [data, setData] = React.useState(props.graphData);\r\n  // const [frames, setFrames] = React.useState([]);\r\n  // const [layout, setLayout] = React.useState(layout);\r\n  // const [config, setConfig] = React.useState({scrollZoom: true, responsive: false});\r\n\r\n  const [figure, setFigure] = useState({\r\n    data: [],\r\n    layout: {\r\n      xaxis: {\r\n        title: 'Time',\r\n        showgrid: true,\r\n        zeroline: false,\r\n        linecolor: 'black',\r\n        linewidth: 1,\r\n        mirror: true\r\n      },\r\n      yaxis: {\r\n          title: 'Concentration',\r\n          showgrid: true,\r\n          zeroline: false,\r\n          // type: 'log',\r\n          linecolor: 'black',\r\n          linewidth: 1,\r\n          mirror: true\r\n      }\r\n    },\r\n    frames: [], \r\n    config: {scrollZoom: true, responsive: false}\r\n  });\r\n\r\n  console.log('function called');\r\n  \r\n  function onUpdate(figure) {\r\n    console.log('on update');\r\n\r\n    figure.data = props.graphData\r\n\r\n    setFigure(figure)\r\n  }\r\n\r\n  function onInitialized(figure) {\r\n    console.log(\"on initialized\")\r\n    setFigure(figure)\r\n  }\r\n\r\n  return (\r\n    <Plot\r\n      data={figure.data}\r\n      layout={figure.layout}\r\n      frames={figure.frames}\r\n      config={figure.config}\r\n      onInitialized={onInitialized}\r\n      onUpdate={onUpdate}\r\n      //onHover={console.log('onHover')}\r\n    />\r\n  );\r\n}*/","import logo from './logo.svg';\r\nimport React from 'react';\r\nimport './App.css';\r\n// import InputSlider from './Slider.js'\r\nimport InitCondTable from './initCondTable.js';\r\nimport RatesTable from './ratesTable.js'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextArea from './textArea.js';\r\nimport { GeneralModel } from './general_model.js';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { kineticModels } from './models.js';\r\n\r\n// import React from 'react';\r\n// import Icon from '@material-ui/core/Icon';\r\nimport PlotlyGraph from './graph.js'\r\n\r\nimport { BlockMath } from 'react-katex';\r\nimport 'katex/dist/katex.min.css';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      initData: [],\r\n      ratesData: [],\r\n      // schemeText: \"A = B = C = D = E\",\r\n      schemeText: \"S + I = 2I\\nI = R = S\",\r\n\r\n      figure: {\r\n        data: [],\r\n        layout: {\r\n          xaxis: {\r\n            title: 'Time',\r\n            showgrid: true,\r\n            zeroline: false,\r\n            linecolor: 'black',\r\n            linewidth: 2,\r\n            mirror: true\r\n          },\r\n          yaxis: {\r\n              title: 'Concentration',\r\n              showgrid: true,\r\n              zeroline: false,\r\n              // type: 'log',\r\n              linecolor: 'black',\r\n              linewidth: 2,\r\n              mirror: true\r\n          },\r\n          autosize: true\r\n          \r\n        },\r\n        frames: [], \r\n        config: {scrollZoom: true, responsive: false},\r\n        revision: 0  // when this value is changed, it forces the plot to redraw\r\n      },\r\n\r\n      texEquation: '',\r\n      cbNonZero: false\r\n    };\r\n\r\n    this.model = null;\r\n    this.modelSubmitted = this.modelSubmitted.bind(this);\r\n    this.sliderValueChanged = this.sliderValueChanged.bind(this);\r\n    this.cbNonZero_checkedChanged = this.cbNonZero_checkedChanged.bind(this);\r\n    this.textChangedCallback = this.textChangedCallback.bind(this);\r\n    this.sliderLogToggledCallback = this.sliderLogToggledCallback.bind(this);\r\n    this.modelChanged = this.modelChanged.bind(this);\r\n    // this.transferParsToModel = this.transferParsToModel.bind(this);\r\n\r\n    // this.options = top100Films.map((option) => {\r\n    //   const firstLetter = option.title[0].toUpperCase();\r\n    //   return {\r\n    //     firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\r\n    //     ...option,\r\n    //   };\r\n    // });\r\n\r\n    // console.log(this.options)\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.modelSubmitted();  // load default model after all components have loaded\r\n  }\r\n\r\n  simulModel(useZeroBR=false) {\r\n    let range = [0, 10];\r\n    let steps = 200;\r\n\r\n    let comps = this.model.getCompartments();\r\n    let solution = this.model.simulateModel(steps, range, useZeroBR);\r\n\r\n    //var graphData = new Array(comps.length);\r\n\r\n    var figure = this.state.figure\r\n\r\n    // update figure data\r\n    let diff = comps.length - figure.data.length;  // difference in number of current compartments and from new model\r\n    if (diff > 0) {\r\n        for (let i = 0; i < diff; i++)\r\n          figure.data.push({\r\n              x: [],\r\n              y: [],\r\n              mode: 'lines',\r\n              type: 'scatter',\r\n              name: ''\r\n            });\r\n    } else if (diff < 0){\r\n        for (let i = 0; i < -diff; i++)\r\n            figure.data.pop();\r\n    }\r\n\r\n    for (let i = 0; i < comps.length; i++) {\r\n      figure.data[i].x = solution.xVals\r\n      figure.data[i].y = solution.yVals[i]\r\n      figure.data[i].name = `${comps[i]}`\r\n    }\r\n    figure.revision += 1\r\n\r\n    return figure;\r\n  }\r\n\r\n  textChangedCallback(text) {\r\n    this.setState({\r\n      schemeText: text\r\n    })\r\n  }\r\n\r\n  modelSubmitted(selecteModel) {\r\n    let scheme = this.state.schemeText\r\n\r\n    if (scheme === \"\" || scheme.match(/[^\\s]+/g) === null){\r\n      alert('Scheme is empty!');\r\n      return;\r\n    }\r\n\r\n    let lastInitData = this.state.initData;\r\n    let lastRatesData = this.state.ratesData;\r\n\r\n    this.model = GeneralModel.fromText(scheme);\r\n    let comps = this.model.getCompartments();\r\n    let compsF = this.model.getLatexFormattedCompartments();\r\n    let rateNames = this.model.getRateNames();\r\n\r\n    let initData = new Array(comps.length);\r\n\r\n    for (let i = 0; i < initData.length; i++) {\r\n      // value from previous model\r\n      let init_value = (i < lastInitData.length) ? lastInitData[i].init : this.model.initial_conditions[comps[i]];\r\n      let log = (i < lastInitData.length) ? lastInitData[i].log : false;\r\n\r\n      let condition = typeof selecteModel === 'undefined';\r\n\r\n      initData[i] = {\r\n        texName: compsF[i], \r\n        init: condition ? init_value : selecteModel.initialConditions[comps[i]].value,\r\n        log: condition? log : selecteModel.initialConditions[comps[i]].logSlider,\r\n        min: condition? 0 : selecteModel.initialConditions[comps[i]].min,\r\n        max: condition? 50 : selecteModel.initialConditions[comps[i]].max\r\n      }\r\n      // transfer params to model\r\n      this.model.initial_conditions[comps[i]] = initData[i].init;\r\n    }\r\n    \r\n    // comps.map((c, i) => ({\r\n    //   texName: compsF[i], \r\n    //   init: (i < lastInitData.length) ? lastInitData[i].init : this.model.initial_conditions[c]\r\n    // }));\r\n\r\n    let ratesData = new Array(rateNames.length);\r\n    for (let i = 0; i < rateNames.length; i++) {\r\n      // values from previous model\r\n      let fr_val = (i < lastRatesData.length) ? lastRatesData[i].fr : this.model.elem_reactions[i].forward_rate;\r\n      let br_val = (i < lastRatesData.length) ? lastRatesData[i].br : this.model.elem_reactions[i].backward_rate;\r\n\r\n      let log_fr = (i < lastRatesData.length) ? lastRatesData[i].log_fr : false;\r\n      let log_br = (i < lastRatesData.length) ? lastRatesData[i].log_br : false;\r\n\r\n      let condition = typeof selecteModel === 'undefined' || typeof selecteModel.rates === 'undefined';\r\n\r\n      ratesData[i] = {\r\n        texName:  rateNames[i],\r\n        fr: condition ? fr_val : selecteModel.rates[i].forwardRate,\r\n        br: condition ? br_val : selecteModel.rates[i].backwardRate,\r\n        log_fr: condition ? log_fr : selecteModel.rates[i].forwardRateLogSlider, \r\n        log_br: condition ? log_br : selecteModel.rates[i].backwardRateLogSlider,\r\n        min_fr: condition ? 0 : selecteModel.rates[i].forwardRateMin,\r\n        max_fr: condition ? 10 : selecteModel.rates[i].forwardRateMax,\r\n        min_br: condition ? 0 : selecteModel.rates[i].backwardRateMin,\r\n        max_br: condition ? 10 : selecteModel.rates[i].forwardRateMax\r\n      }\r\n      // transfer params to model\r\n      this.model.elem_reactions[i].forward_rate = ratesData[i].fr;\r\n      this.model.elem_reactions[i].backward_rate = ratesData[i].br;\r\n    }\r\n\r\n    this.model.buildFunc();\r\n\r\n    let figure = this.simulModel(!this.state.cbNonZero);\r\n\r\n    this.setState({\r\n      initData: initData,\r\n      ratesData: ratesData,\r\n      figure: figure,\r\n      texEquation: this.state.cbNonZero ? this.model.diffEquations : this.model.diffEquationsFRates\r\n    });\r\n  }\r\n\r\n  sliderLogToggledCallback(type, index) {\r\n\r\n    let initData = this.state.initData;\r\n    let ratesData = this.state.ratesData;\r\n\r\n    switch (type) {\r\n      case \"init\":  // changing of initial conditions\r\n          initData[index].log = !initData[index].log;\r\n          break;\r\n      case \"fr\":   // changing of forward rate constants\r\n          ratesData[index].log_fr = !ratesData[index].log_fr;\r\n          break;\r\n      case \"br\":   // changing of backward rate constants\r\n          ratesData[index].log_br = !ratesData[index].log_br;\r\n          break;\r\n    }\r\n    this.setState({\r\n      initData: initData,\r\n      ratesData: ratesData\r\n    });\r\n  }\r\n\r\n  sliderValueChanged(type, index, value) {\r\n    // console.log(name, value);\r\n\r\n    // let split = name.split('_');\r\n    // let text = split[0];\r\n    // let num = parseInt(split[1]);\r\n    let f_val = parseFloat(value);\r\n\r\n    let initData = this.state.initData;\r\n    let ratesData = this.state.ratesData;\r\n\r\n    switch (type) {\r\n        case \"init\":  // changing of initial conditions\r\n            let comps = this.model.getCompartments();\r\n            this.model.initial_conditions[comps[index]] = f_val;\r\n            initData[index].init = f_val;\r\n            break;\r\n        case \"fr\":   // changing of forward rate constants\r\n            this.model.elem_reactions[index].forward_rate = f_val;\r\n            ratesData[index].fr = f_val;\r\n            break;\r\n        case \"br\":   // changing of backward rate constants\r\n            this.model.elem_reactions[index].backward_rate = f_val;\r\n            ratesData[index].br = f_val;\r\n            break;\r\n    }\r\n\r\n    let figure = this.simulModel(!this.state.cbNonZero);\r\n\r\n    this.setState({\r\n      figure: figure,\r\n      initData: initData,\r\n      ratesData: ratesData\r\n    });\r\n  }\r\n\r\n  modelChanged(event, objectChosen) {\r\n    if (objectChosen === null)\r\n      return\r\n    this.state.schemeText = objectChosen.scheme;\r\n    this.state.cbNonZero = objectChosen.nonZeroBackwardRates;\r\n    // console.log(objectChosen.scheme)\r\n    this.modelSubmitted(objectChosen);\r\n  }\r\n\r\n  cbNonZero_checkedChanged(event) {\r\n\r\n    let figure = this.simulModel(!event.target.checked);\r\n\r\n    this.setState({\r\n      texEquation: event.target.checked ? this.model.diffEquations : this.model.diffEquationsFRates,\r\n      cbNonZero: event.target.checked,\r\n      figure: figure\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n        <p>Compartmental model simulator</p>\r\n  \r\n        <Grid container spacing={1} alignItems=\"column\" direction=\"row\">\r\n          <Grid item xs>\r\n\r\n            <Autocomplete\r\n              options={kineticModels.sort((a, b) => -b.class.localeCompare(a.class))}\r\n              groupBy={(option) => option.class}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={this.modelChanged}\r\n              renderInput={(params) => <TextField {...params} label=\"Kinetics models\" variant=\"outlined\" />}\r\n            />\r\n  \r\n            <TextArea schemeText={this.state.schemeText} modelSubmitCallback={this.modelSubmitted} textChangedCallback={this.textChangedCallback}/>\r\n\r\n            <FormControlLabel\r\n                control={<Checkbox color=\"secondary\" checked={this.state.cbNonZero} onChange={this.cbNonZero_checkedChanged} name=\"cbNonZero\" />}\r\n                label=\"Non-zero backwards rates\"\r\n            />\r\n\r\n            <BlockMath math={`\\\\begin{aligned} ${this.state.texEquation} \\\\end{aligned}`} errorColor={'#cc0000'}/>\r\n  \r\n            <InitCondTable \r\n              data={this.state.initData} \r\n              sliderChangedCallback={this.sliderValueChanged}\r\n              sliderLogToggledCallback={this.sliderLogToggledCallback}>\r\n            </InitCondTable>\r\n\r\n            <RatesTable \r\n              data={this.state.ratesData} \r\n              sliderChangedCallback={this.sliderValueChanged}\r\n              sliderLogToggledCallback={this.sliderLogToggledCallback}\r\n              disabled={!this.state.cbNonZero}>\r\n            </RatesTable>\r\n  \r\n          </Grid>\r\n          <Grid item xs>\r\n            <PlotlyGraph \r\n              data={this.state.figure.data}\r\n              frames={this.state.figure.frames}\r\n              config={this.state.figure.config}\r\n              layout={this.state.figure.layout}\r\n              revision={this.state.figure.revision}\r\n             />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n//       <p>Application  react</p>\r\n\r\n//       <Grid container spacing={1} alignItems=\"column\" direction=\"row\">\r\n//         <Grid item xs>\r\n\r\n//           <TextArea text=\"A = B = C = D = E\"/>\r\n\r\n//           <InitCondTable data={init}></InitCondTable>\r\n//           <RatesTable data={data}></RatesTable>\r\n\r\n//         </Grid>\r\n//         <Grid item xs>\r\n//           <PlotlyGraph />\r\n//         </Grid>\r\n//       </Grid>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// function App() {\r\n//   return <Button color=\"primary\">Hello World</Button>;\r\n// }\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}